       
#(#! 
(lisp::in-package (lisp::quote user::compiler))
#(lisp::quote lisp::eval-when "The situation ~s is illegal." "The declaration ~s was found in a bad place." lisp::declare lisp::the compiler::info "Type mismatch was found in ~s." lisp::compiler-let "The variable binding ~s is illegal." "The variable binding ~s is illegal." lisp::function compiler::call-local compiler::*info* :sp-change compiler::no-sp-change compiler::call-global lisp::lambda "The lambda expression ~s is illegal." compiler::*vars* compiler::cb compiler::*funs* compiler::*blocks* compiler::*tags* "The function ~s is illegal." lisp::symbol-function compiler::ccb-vs compiler::fun compiler::vs* :name compiler::closure :cfun compiler::*next-cfun* compiler::*local-funs* compiler::*clink* compiler::*ccb-vs* compiler::*closures* compiler::make-cclosure system::setvv compiler::*next-vv* system::mc "&LC" compiler::vv compiler::*safe-compile* compiler::*compiler-output1* compiler::too-few-args compiler::too-many-args compiler::c1constant-value compiler::c1nil lisp::eval compiler::c1progn lisp::load lisp::compile compiler::cmperr compiler::c1expr compiler::copy-info compiler::type-and compiler::type-filter compiler::cmpwarn compiler::c2expr compiler::c1local-closure compiler::make-info compiler::c1lambda-expr compiler::unwind-exit compiler::add-symbol compiler::make-fun compiler::push-data-incf compiler::add-init compiler::add-address compiler::wt1 compiler::wt-clink (system::%init . #((system::warn-version 0) (system::putprop (lisp::quote lisp::quote) (lisp::quote compiler::c1quote) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::function) (lisp::quote compiler::c1function) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::function) (lisp::quote compiler::c2function) (lisp::quote compiler::c2)) (system::putprop (lisp::quote lisp::the) (lisp::quote compiler::c1the) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::eval-when) (lisp::quote compiler::c1eval-when) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::declare) (lisp::quote compiler::c1declare) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::compiler-let) (lisp::quote compiler::c1compiler-let) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::compiler-let) (lisp::quote compiler::c2compiler-let) (lisp::quote compiler::c2)) (system::mfsfun (lisp::quote compiler::c1quote) 0 1) (system::mfsfun (lisp::quote compiler::c1eval-when) 1 1) (system::mfsfun (lisp::quote compiler::c1declare) 2 1) (system::mfsfun (lisp::quote compiler::c1the) 3 1) (system::mfsfun (lisp::quote compiler::c1compiler-let) 4 1) (system::mf (lisp::quote compiler::c2compiler-let) 5) (system::mfsfun (lisp::quote compiler::c1function) 6 1) (system::mfsfun (lisp::quote compiler::c2function) 7 1) (system::putprop (lisp::quote lisp::symbol-function) (lisp::quote compiler::wt-symbol-function) (lisp::quote compiler::wt-loc)) (system::putprop (lisp::quote compiler::make-cclosure) (lisp::quote compiler::wt-make-cclosure) (lisp::quote compiler::wt-loc)) (system::mfsfun (lisp::quote compiler::wt-symbol-function) 8 1) (system::mfsfun (lisp::quote compiler::wt-make-cclosure) 9 2))))
)
