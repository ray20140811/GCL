       
#(#! 
(lisp::in-package (lisp::quote user::compiler))
#(lisp::princ compiler::*princ-string-limit* compiler::var (compiler::global lisp::special) compiler::call-global compiler::*value-to-go* compiler::trash compiler::*compiler-output1* #\\ #\" #\Newline lisp::terpri compiler::location :type lisp::character lisp::string compiler::vv (compiler::global lisp::special) lisp::apply compiler::call-lambda compiler::*vs* compiler::cvar compiler::*next-cvar* compiler::vs compiler::*base-used* compiler::*safe-compile* compiler::args-pushed "APPLY passes too many arguments to LAMBDA expression." lisp::list* lisp::let :kind compiler::lexical :ref compiler::apply-optimize compiler::*unwind-exit* compiler::*clink* compiler::*ccb-vs* compiler::*compiler-check-args* "ck_larg_at_least" "ck_larg_exactly" lisp::funcall lisp::rplaca compiler::*inline-blocks* (lisp::t lisp::t) lisp::rplacd (lisp::t lisp::t) system::memq compiler::member!2 lisp::eq lisp::member lisp::eql :test ((lisp::quote lisp::eq) (lisp::function lisp::eq) (lisp::quote lisp::equal) (lisp::function lisp::equal) (lisp::quote lisp::equalp) (lisp::function lisp::equalp) (lisp::quote lisp::eql) (lisp::function lisp::eql)) (lisp::t lisp::t) compiler::jump-true compiler::jump-false compiler::jump lisp::assoc compiler::assoc!2 ((lisp::quote lisp::eq) (lisp::function lisp::eq) (lisp::quote lisp::equal) (lisp::function lisp::equal) (lisp::quote lisp::equalp) (lisp::function lisp::equalp) (lisp::quote lisp::eql) (lisp::function lisp::eql)) (lisp::t lisp::t) lisp::car compiler::boole3 compiler::fixnum-value "must be constant" "should not get here boole opt" 4 "((~(#0))&(#1))" 2 "(((#0))&(~(#1)))" 8 "(~((#0)|(#1)))" 13 "(~(#0)) | (#1)))" 11 "((#0) | (~(#1)))" 14 "(~((#0) & (#1)))" 9 "(~((#0) ^ (#1)))" 1 "((#0) & (#1))" 6 "((#0) ^ (#1))" 7 "((#0) | (#1))" lisp::the (lisp::integer 0 31) "integer shift only" compiler::shift>> compiler::shift<< (lisp::integer 0 31) (lisp::integer -31 0) "should not get here" 2147483647 lisp::byte lisp::fixnum compiler::ldb1 compiler::info lisp::symbol-name compiler::symbol-length lisp::length lisp::get (lisp::t lisp::t lisp::t) (lisp::t lisp::t) lisp::cadr lisp::declare lisp::type lisp::and lisp::typep (lisp::quote lisp::character) lisp::= lisp::char-code lisp::quote compiler::*type-alist* lisp::vector (lisp::array lisp::vector lisp::simple-array) (lisp::*) lisp::string-char lisp::stringp lisp::bit lisp::bit-vector-p compiler::*aet-types* compiler::boolean compiler::vector-type lisp::satisfies compiler::.tem (lisp::typep compiler::.tem (lisp::quote lisp::fixnum)) lisp::>= (lisp::the lisp::fixnum compiler::.tem) lisp::<= (lisp::the lisp::fixnum compiler::.tem) system::s-data compiler::*frozen-defstructs* system::structure-subtype-p system::structurep lisp::or system::structure-def lisp::aref lisp::cons (lisp::nil) lisp::list 0 lisp::caddr 3 lisp::cadddr lisp::cddddr 5 lisp::cdr lisp::cddr lisp::cdddr system::rplaca-nthcdr lisp::setf lisp::nthcdr compiler::*space* system::*eof* lisp::*standard-input* compiler::stt compiler::fp-ok (compiler::ans 0) (lisp::declare (lisp::fixnum compiler::stt compiler::ans)) lisp::cond (lisp::eql compiler::stt 0) (lisp::setq compiler::ans (compiler::qgetc1 compiler::stt)) compiler::ans compiler::qfeof lisp::stream compiler::read-char1 (lisp::code-char compiler::ans) compiler::.strm. compiler::read-byte1 lisp::*standard-output* (lisp::declare (lisp::fixnum compiler::stt)) (lisp::eql compiler::stt 0) compiler::.ch (lisp::t (lisp::the lisp::fixnum (compiler::qputc compiler::.ch compiler::stt))) compiler::.str lisp::write-byte (lisp::declare (lisp::fixnum compiler::.ch)) lisp::write-char (lisp::declare (lisp::character compiler::.ch)) "object" "char" "fixnum" "unsigned char" "unsigned short" "short" "unsigned short" "longfloat" "shortfloat" lisp::let* compiler::.val compiler::.v ((compiler::.i (lisp::fill-pointer compiler::.v)) (compiler::.dim (lisp::array-total-size compiler::.v))) (lisp::declare (lisp::fixnum compiler::.i compiler::.dim)) ((lisp::< compiler::.i compiler::.dim) (lisp::the lisp::fixnum (system::fill-pointer-set compiler::.v (lisp::the lisp::fixnum (lisp::+ 1 compiler::.i)))) (system::aset compiler::.v compiler::.i compiler::.val) compiler::.i) lisp::vector-push-extend compiler::co1 compiler::co1constant-fold (lisp::equal (lisp::function lisp::equal)) lisp::equal (lisp::eql (lisp::function lisp::eql)) (lisp::eq (lisp::function lisp::eq)) compiler::sublis1 compiler::*objects* :key (lisp::eq lisp::equal lisp::eql) "bad test" "~(&~a~)))" compiler::list-nth-immediate system::list-nth (lisp::t lisp::t) compiler::make-info compiler::too-few-args compiler::too-many-args compiler::c1nil compiler::c1expr* compiler::wt1 compiler::unwind-exit compiler::c2call-global compiler::add-object compiler::c1funob compiler::copy-info compiler::c1args compiler::c1apply-optimize compiler::save-funob compiler::c2expr* compiler::vs-push compiler::c2funcall compiler::cmperr compiler::make-var compiler::wt-var compiler::wt-vs compiler::c2bind compiler::c2expr compiler::add-info compiler::inline-args compiler::close-inline-blocks compiler::inline-boole3-string compiler::c1expr compiler::wt-inline-loc lisp::subtypep system::fixnump compiler::result-type compiler::replace-constant compiler::type-filter system::best-array-element-type lisp::position system::normalize-type compiler::struct-type-opt compiler::get-included compiler::name-sd1 compiler::cons-to-lista compiler::fast-read compiler::cfast-write lisp::signed-char lisp::unsigned-char lisp::unsigned-short lisp::signed-short lisp::long-float lisp::short-float compiler::constant-fold-p compiler::cmp-eval compiler::cmp-macroexpand lisp::do lisp::do* lisp::prog lisp::prog* lisp::find (system::%init . #((system::warn-version 0) (system::putprop (lisp::quote lisp::princ) (lisp::quote compiler::c1princ) (lisp::quote compiler::c1)) (system::putprop (lisp::quote lisp::princ) (lisp::quote compiler::c2princ) (lisp::quote compiler::c2)) (system::putprop (lisp::quote lisp::terpri) (lisp::quote compiler::c1terpri) (lisp::quote compiler::c1)) (system::putprop (lisp::quote lisp::apply) (lisp::quote compiler::c1apply) (lisp::quote compiler::c1)) (system::putprop (lisp::quote lisp::apply) (lisp::quote compiler::c2apply) (lisp::quote compiler::c2)) (system::putprop (lisp::quote compiler::apply-optimize) (lisp::quote compiler::c2apply-optimize) (lisp::quote compiler::c2)) (system::putprop (lisp::quote lisp::funcall) (lisp::quote compiler::c1funcall) (lisp::quote compiler::c1)) (system::putprop (lisp::quote lisp::rplaca) (lisp::quote compiler::c1rplaca) (lisp::quote compiler::c1)) (system::putprop (lisp::quote lisp::rplaca) (lisp::quote compiler::c2rplaca) (lisp::quote compiler::c2)) (system::putprop (lisp::quote lisp::rplacd) (lisp::quote compiler::c1rplacd) (lisp::quote compiler::c1)) (system::putprop (lisp::quote lisp::rplacd) (lisp::quote compiler::c2rplacd) (lisp::quote compiler::c2)) (system::putprop (lisp::quote system::memq) (lisp::quote compiler::c1memq) (lisp::quote compiler::c1)) (system::putprop (lisp::quote lisp::member) (lisp::quote compiler::c1member) (lisp::quote compiler::c1)) (system::putprop (lisp::quote compiler::member!2) (lisp::quote compiler::c2member!2) (lisp::quote compiler::c2)) (system::putprop (lisp::quote lisp::assoc) (lisp::quote compiler::c1assoc) (lisp::quote compiler::c1)) (system::putprop (lisp::quote compiler::assoc!2) (lisp::quote compiler::c2assoc!2) (lisp::quote compiler::c2)) (system::putprop (lisp::quote lisp::get) (lisp::quote compiler::c1get) (lisp::quote compiler::c1)) (system::putprop (lisp::quote lisp::get) (lisp::quote compiler::c2get) (lisp::quote compiler::c2)) (system::putprop (lisp::quote lisp::nth) (lisp::quote (compiler::c1nth-condition . compiler::c1nth)) (lisp::quote compiler::c1conditional)) (system::putprop (lisp::quote lisp::nthcdr) (lisp::quote (compiler::c1nthcdr-condition . compiler::c1nthcdr)) (lisp::quote compiler::c1conditional)) (system::putprop (lisp::quote system::rplaca-nthcdr) (lisp::quote compiler::c1rplaca-nthcdr) (lisp::quote compiler::c1)) (system::putprop (lisp::quote system::list-nth) (lisp::quote compiler::c1list-nth) (lisp::quote compiler::c1)) (system::putprop (lisp::quote compiler::list-nth-immediate) (lisp::quote compiler::c2list-nth-immediate) (lisp::quote compiler::c2)) (system::*make-special (lisp::quote compiler::*princ-string-limit*)) (lisp::or (lisp::boundp (lisp::quote compiler::*princ-string-limit*)) (lisp::setq compiler::*princ-string-limit* 80)) (system::mfsfun (lisp::quote compiler::c1princ) 0 1) (system::mfsfun (lisp::quote compiler::c2princ) 1 3) (system::mfsfun (lisp::quote compiler::c1terpri) 2 1) (system::mfsfun (lisp::quote compiler::c1apply) 3 1) (system::mfsfun (lisp::quote compiler::c2apply) 4 2) (system::mfsfun (lisp::quote compiler::c1apply-optimize) 5 5) (system::mf (lisp::quote compiler::c2apply-optimize) 6) (system::mfsfun (lisp::quote compiler::c1funcall) 7 1) (system::mfsfun (lisp::quote compiler::c1rplaca) 8 1) (system::mfsfun (lisp::quote compiler::c2rplaca) 9 1) (system::mfsfun (lisp::quote compiler::c1rplacd) 10 1) (system::mfsfun (lisp::quote compiler::c2rplacd) 11 1) (system::mfsfun (lisp::quote compiler::c1memq) 12 1) (system::mfsfun (lisp::quote compiler::c1member) 13 1) (system::mfsfun (lisp::quote compiler::c2member!2) 14 2) (system::mfsfun (lisp::quote compiler::c1assoc) 15 1) (system::mfsfun (lisp::quote compiler::c2assoc!2) 16 2) (system::putprop (lisp::quote lisp::boole) (lisp::quote (compiler::c1boole-condition . compiler::c1boole3)) (lisp::quote compiler::c1conditional)) (system::mfsfun (lisp::quote compiler::c1boole-condition) 17 1) (system::mfsfun (lisp::quote compiler::c1boole3) 18 1) (system::mf (lisp::quote compiler::inline-boole3) 19) (system::mfsfun (lisp::quote compiler::inline-boole3-string) 20 1) (system::putprop (lisp::quote lisp::ash) (lisp::quote (compiler::c1ash-condition . compiler::c1ash)) (lisp::quote compiler::c1conditional)) (system::mfsfun (lisp::quote compiler::c1ash-condition) 21 1) (system::mfsfun (lisp::quote compiler::c1ash) 22 1) (system::mfsfun (lisp::quote compiler::shift>>) 23 2) (system::mfsfun (lisp::quote compiler::shift<<) 24 2) (system::putprop (lisp::quote lisp::ash) (lisp::quote (compiler::c1ash-condition . compiler::c1ash)) (lisp::quote compiler::c1conditional)) (system::putprop (lisp::quote compiler::shift>>) "Lash" (lisp::quote compiler::lfun)) (system::putprop (lisp::quote compiler::shift<<) "Lash" (lisp::quote compiler::lfun)) (system::putprop (lisp::quote lisp::ldb) (lisp::quote compiler::co1ldb) (lisp::quote compiler::co1)) (system::mf (lisp::quote compiler::co1ldb) 25) (system::putprop (lisp::quote lisp::length) (lisp::quote compiler::c1length) (lisp::quote compiler::c1)) (system::mfsfun (lisp::quote compiler::c1length) 26 1) (system::mfsfun (lisp::quote compiler::c1get) 27 1) (system::mfsfun (lisp::quote compiler::c2get) 28 1) (system::mfsfun (lisp::quote compiler::co1eql) 29 2) (system::putprop (lisp::quote lisp::eql) (lisp::quote compiler::co1eql) (lisp::quote compiler::co1)) (system::*make-special (lisp::quote compiler::*frozen-defstructs*)) (lisp::or (lisp::boundp (lisp::quote compiler::*frozen-defstructs*)) (lisp::setq compiler::*frozen-defstructs* lisp::nil)) (system::mfsfun (lisp::quote compiler::result-type) 30 1) (system::*make-special (lisp::quote compiler::*type-alist*)) (lisp::or (lisp::boundp (lisp::quote compiler::*type-alist*)) (lisp::setq compiler::*type-alist* (lisp::quote ((lisp::fixnum . system::fixnump) (lisp::float . lisp::floatp) (lisp::short-float . compiler::short-float-p) (lisp::long-float . compiler::long-float-p) (lisp::integer . lisp::integerp) (lisp::character . lisp::characterp) (lisp::symbol . lisp::symbolp) (lisp::cons . lisp::consp) (lisp::null . lisp::null) (lisp::array . lisp::arrayp) (lisp::vector . lisp::vectorp) (lisp::bit-vector . lisp::bit-vector-p) (lisp::string . lisp::stringp) (lisp::list lisp::lambda (compiler::y) (lisp::or (lisp::consp compiler::y) (lisp::null compiler::y))) (lisp::number . lisp::numberp) (lisp::rational . lisp::rationalp) (lisp::complex . lisp::complexp) (lisp::ratio . compiler::ratiop) (lisp::sequence lisp::lambda (compiler::y) (lisp::or (lisp::listp compiler::y) (lisp::vectorp compiler::y))) (lisp::function . lisp::functionp))))) (system::mfsfun (lisp::quote compiler::co1typep) 31 2) (system::mfsfun (lisp::quote compiler::struct-type-opt) 32 2) (system::mfsfun (lisp::quote compiler::get-included) 33 1) (system::putprop (lisp::quote lisp::typep) (lisp::quote compiler::co1typep) (lisp::quote compiler::co1)) (system::mfsfun (lisp::quote compiler::co1schar) 34 2) (system::putprop (lisp::quote lisp::schar) (lisp::quote compiler::co1schar) (lisp::quote compiler::co1)) (system::putprop (lisp::quote lisp::cons) (lisp::quote compiler::co1cons) (lisp::quote compiler::co1)) (system::mfsfun (lisp::quote compiler::cons-to-lista) 35 1) (system::mfsfun (lisp::quote compiler::co1cons) 36 2) (system::mfsfun (lisp::quote compiler::c1nth-condition) 37 1) (system::mfsfun (lisp::quote compiler::c1nth) 38 1) (system::mfsfun (lisp::quote compiler::c1nthcdr-condition) 39 1) (system::mfsfun (lisp::quote compiler::c1nthcdr) 40 1) (system::mfsfun (lisp::quote compiler::c1rplaca-nthcdr) 41 1) (system::putprop (lisp::quote lisp::read-byte) (lisp::quote compiler::co1read-byte) (lisp::quote compiler::co1)) (system::putprop (lisp::quote lisp::read-char) (lisp::quote compiler::co1read-char) (lisp::quote compiler::co1)) (system::putprop (lisp::quote lisp::write-byte) (lisp::quote compiler::co1write-byte) (lisp::quote compiler::co1)) (system::putprop (lisp::quote lisp::write-char) (lisp::quote compiler::co1write-char) (lisp::quote compiler::co1)) (system::mfsfun (lisp::quote compiler::fast-read) 42 2) (system::mfsfun (lisp::quote compiler::co1read-byte) 43 2) (system::mfsfun (lisp::quote compiler::co1read-char) 44 2) (system::mfsfun (lisp::quote compiler::cfast-write) 45 2) (system::mfsfun (lisp::quote compiler::co1write-byte) 46 2) (system::mfsfun (lisp::quote compiler::co1write-char) 47 2) (system::*make-special (lisp::quote compiler::*aet-types*)) (lisp::or (lisp::boundp (lisp::quote compiler::*aet-types*)) (lisp::setq compiler::*aet-types* #(lisp::t lisp::string-char lisp::signed-char lisp::fixnum lisp::short-float lisp::long-float lisp::signed-char lisp::unsigned-char lisp::signed-short lisp::unsigned-short))) (system::mfsfun (lisp::quote compiler::aet-c-type) 48 1) (system::putprop (lisp::quote lisp::vector-push) (lisp::quote compiler::co1vector-push) (lisp::quote compiler::co1)) (system::putprop (lisp::quote lisp::vector-push-extend) (lisp::quote compiler::co1vector-push) (lisp::quote compiler::co1)) (system::mfsfun (lisp::quote compiler::co1vector-push) 49 2) (system::mfsfun (lisp::quote compiler::constant-fold-p) 50 1) (system::mfsfun (lisp::quote compiler::co1constant-fold) 51 2) (system::putprop (lisp::quote lisp::do) (lisp::quote compiler::co1special-fix-decl) (lisp::quote compiler::co1special)) (system::putprop (lisp::quote lisp::do*) (lisp::quote compiler::co1special-fix-decl) (lisp::quote compiler::co1special)) (system::putprop (lisp::quote lisp::prog) (lisp::quote compiler::co1special-fix-decl) (lisp::quote compiler::co1special)) (system::putprop (lisp::quote lisp::prog*) (lisp::quote compiler::co1special-fix-decl) (lisp::quote compiler::co1special)) (system::mfsfun (lisp::quote compiler::co1special-fix-decl) 52 2) (system::putprop (lisp::quote lisp::sublis) (lisp::quote compiler::co1sublis) (lisp::quote compiler::co1)) (system::mfsfun (lisp::quote compiler::co1sublis) 53 2) (system::mfsfun (lisp::quote compiler::sublis1-inline) 54 3) (system::mfsfun (lisp::quote compiler::c1list-nth) 55 1) (system::mfsfun (lisp::quote compiler::c2list-nth-immediate) 56 2))))
)
