       
#(#! 
(lisp::in-package (lisp::quote user::compiler))
#(compiler::*setjmps* compiler::*vars* lisp::let compiler::var "The variable binding ~s is illegal." compiler::info compiler::*unwind-exit* compiler::*vs* compiler::*clink* compiler::*ccb-vs* compiler::*next-cvar* compiler::down compiler::c2expr* compiler::replaced (lisp::special compiler::global) lisp::object compiler::vs (compiler::lexical compiler::replaced lisp::object) compiler::cvar lisp::special compiler::*value-to-go* compiler::*compiler-output1* lisp::let* "The variable binding ~s is illegal." (lisp::fixnum lisp::character lisp::long-float lisp::short-float lisp::integer) (compiler::lexical compiler::replaced lisp::object) (compiler::var-kind compiler::var) (lisp::quote lisp::object) compiler::lexical compiler::*register-min* compiler::clb (lisp::fixnum lisp::character lisp::long-float lisp::short-float lisp::object lisp::integer) lisp::cons lisp::list compiler::stack-cons "Stack let = regular let for ~a ~a" compiler::stack-let compiler::*compiler-output2* " struct cons ~{STcons~a ~^,~};" compiler::make-info compiler::too-few-args compiler::c1body compiler::c1add-globals compiler::c1make-var compiler::default-init compiler::cmperr compiler::and-form-type compiler::c1expr* compiler::check-vdecl compiler::c1decl-body compiler::add-info compiler::check-vref compiler::c2var-kind system::fixnump compiler::wfs-error compiler::vs-push lisp::fixnum lisp::character lisp::long-float lisp::short-float lisp::integer compiler::location compiler::can-be-replaced compiler::args-info-changed-vars compiler::baboon compiler::write-block-open compiler::c2bind-loc compiler::c2bind compiler::c2expr compiler::can-be-replaced* lisp::eq compiler::c2bind-init compiler::wt-var-decl compiler::cmpwarn compiler::c1expr compiler::wt1 compiler::wt-h1 (system::%init . #((system::warn-version 0) (system::putprop (lisp::quote lisp::let) (lisp::quote compiler::c1let) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::let) (lisp::quote compiler::c2let) (lisp::quote compiler::c2)) (system::putprop (lisp::quote lisp::let*) (lisp::quote compiler::c1let*) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::let*) (lisp::quote compiler::c2let*) (lisp::quote compiler::c2)) (system::mfsfun (lisp::quote compiler::c1let) 0 1) (system::mfsfun (lisp::quote compiler::c2let) 1 3) (system::mfsfun (lisp::quote compiler::c1let*) 2 1) (system::mfsfun (lisp::quote compiler::c2let*) 3 3) (system::mfsfun (lisp::quote compiler::can-be-replaced) 4 2) (system::mfsfun (lisp::quote compiler::can-be-replaced*) 5 3) (system::mfsfun (lisp::quote compiler::write-block-open) 6 1) (system::sputprop (lisp::quote compiler::stack-let) (lisp::quote compiler::c1special) (lisp::quote compiler::c1stack-let)) (system::mm (lisp::quote compiler::stack-let) 7) (system::mfsfun (lisp::quote compiler::c1stack-let) 8 1) (system::sputprop (lisp::quote compiler::stack-let) (lisp::quote compiler::c2) (lisp::quote compiler::c2stack-let)) (system::mfsfun (lisp::quote compiler::c2stack-let) 9 2) (lisp::let* ((#0=#:g1155 (lisp::quote compiler::stack-cons)) (#1=#:g1156 (lisp::quote compiler::inline-always)) (#2=#:g1157 (lisp::cons (lisp::quote ((lisp::fixnum lisp::t lisp::t) lisp::t 0 "(STcons#0.t=t_cons,STcons#0.m=0,STcons#0.c_car=(#1),
              STcons#0.c_cdr=(#2),(object)&STcons#0)")) (lisp::get #0# #1#)))) (system::put-aux #0# #1# #2#)))))
)
