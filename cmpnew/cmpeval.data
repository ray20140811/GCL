       
#(#! 
(lisp::export (lisp::quote (system::define-compiler-macro system::undef-compiler-macro system::define-inline-function)) (lisp::quote lisp::system))#! 
(lisp::in-package (lisp::quote user::compiler))
#(lisp::nil compiler::location :type compiler::vv lisp::lambda system::|#,| "Sharp-comma-macro was found in a bad place." "The function ~s is illegal." compiler::*cmperr-tag* compiler::*sharp-commas* system::define-structure compiler::*c1nil* compiler::*c1t* ((compiler::allocates-new-storage compiler::ans) (compiler::side-effect-p lisp::set) (lisp::constantp) (compiler::result-type-from-args compiler::rfa) (compiler::is)) "unknown opt flag" lisp::logbitp compiler::*compiler-in-use* "Obsolete optimization: use fix-opt ~s" compiler::return-type lisp::* (compiler::inline-always compiler::inline-unsafe) compiler::c1special compiler::co1special compiler::call-local :sp-change compiler::info compiler::co1 compiler::c1 compiler::c1conditional lisp::and "~A (in lisp package) is called as a function--not yet defined" compiler::*record-call-info* compiler::record-call-info compiler::compiler-macro lisp::funcall lisp::quote system::structure-access lisp::elt system::list-nth "Sharp-comma-macro was found in a bad place." compiler::no-sp-change (lisp::*) compiler::arg-types lisp::string lisp::character lisp::array lisp::vector "Type mismatch was found in ~s." "Type mismatch was found in ~s." compiler::call-global compiler::call-lambda lisp::let lisp::let* compiler::*volatile* compiler::c2 compiler::wholec2 compiler::*inline-blocks* :initial-element compiler::fcalln-inline compiler::*exit* compiler::*last-label* compiler::*unwind-exit* compiler::*compiler-output1* compiler::*vs* compiler::*max-vs* compiler::*level* compiler::*next-cmacro* compiler::*reservation-cmacro* compiler::*base-used* compiler::*safe-compile* compiler::*reservations* lisp::progn compiler::*value-to-go* compiler::trash system::structure-ref compiler::*aet-types* system::s-data compiler::structure-ref lisp::inline "bad type ~a" compiler::my-call (lisp::t) compiler::joe (lisp::t) compiler::structure-set system::structure-set compiler::side-effects (lisp::t lisp::t lisp::t) compiler::wt-loc lisp::fixnum compiler::fixnum-value 1024 compiler::character-value compiler::*objects* lisp::nil lisp::most-positive-long-float lisp::nil 1.0F20 lisp::least-positive-long-float compiler::*next-vv* lisp::long-float compiler::long-float-value lisp::short-float compiler::short-float-value system::putprop lisp::caddr system::defmacro* (lisp::quote compiler::compiler-macro) compiler::*compiler-temps* (lisp::&optional lisp::&rest lisp::&key lisp::&aux) "TMP" compiler::compiler "The parameter ~s for the inline function ~s is illegal." lisp::list lisp::defun system::define-compiler-macro lisp::list* (lisp::quote lisp::let) "The structure ~a is undefined." compiler::name-to-sd compiler::name-sd system::struct-predicate lisp::typep compiler::c1expr compiler::add-info compiler::c1nil compiler::c1t compiler::make-info compiler::object-type compiler::add-object compiler::c1constant-value compiler::add-constant compiler::c1var compiler::c1symbol-fun compiler::c1lambda-fun compiler::cmperr compiler::add-load-time-sharp-comma compiler::flags-pos compiler::cmpwarn compiler::fix-opt compiler::type>= compiler::c1local-fun compiler::c1args compiler::get-local-return-type compiler::get-local-arg-types compiler::and-form-type compiler::cmp-expand-macro compiler::inline-possible compiler::cmp-eval compiler::c1structure-ref1 compiler::get-return-type compiler::get-arg-types compiler::check-form-type lisp::aref compiler::type-and system::aset compiler::result-type-from-args compiler::c1lambda-expr compiler::c2call-global compiler::volatile compiler::baboon compiler::get-inline-loc compiler::unwind-exit compiler::close-inline-blocks compiler::c2expr compiler::wt1 compiler::reset-top compiler::c2expr-top compiler::c1progn compiler::c1expr* compiler::type-filter compiler::add-symbol compiler::inline-type compiler::coerce-loc compiler::inline-args compiler::wfs-error compiler::aet-c-type lisp::abs (system::%init . #((system::warn-version 0) (system::putprop (lisp::quote lisp::progn) (lisp::quote compiler::c1progn) (lisp::quote compiler::c1special)) (system::putprop (lisp::quote lisp::progn) (lisp::quote compiler::c2progn) (lisp::quote compiler::c2)) (system::putprop (lisp::quote system::structure-ref) (lisp::quote compiler::c1structure-ref) (lisp::quote compiler::c1)) (system::putprop (lisp::quote compiler::structure-ref) (lisp::quote compiler::c2structure-ref) (lisp::quote compiler::c2)) (system::putprop (lisp::quote compiler::structure-ref) (lisp::quote compiler::wt-structure-ref) (lisp::quote compiler::wt-loc)) (system::putprop (lisp::quote system::structure-set) (lisp::quote compiler::c1structure-set) (lisp::quote compiler::c1)) (system::putprop (lisp::quote compiler::structure-set) (lisp::quote compiler::c2structure-set) (lisp::quote compiler::c2)) (system::mfsfun (lisp::quote compiler::c1expr*) 0 2) (system::setvv 0 compiler::*cmperr-tag*) (system::mfsfun (lisp::quote compiler::c1expr) 1 1) (system::putprop (lisp::quote system::|#,|) (lisp::quote compiler::c1sharp-comma) (lisp::quote compiler::c1special)) (system::mfsfun (lisp::quote compiler::c1sharp-comma) 2 1) (system::putprop (lisp::quote system::define-structure) (lisp::quote compiler::c1define-structure) (lisp::quote compiler::t1)) (system::mfsfun (lisp::quote compiler::c1define-structure) 3 1) (system::*make-special (lisp::quote compiler::*c1nil*)) (lisp::or (lisp::boundp (lisp::quote compiler::*c1nil*)) (lisp::setq compiler::*c1nil* (lisp::list (lisp::quote compiler::location) (compiler::make-info :type (compiler::object-type lisp::nil)) lisp::nil))) (system::mfsfun (lisp::quote compiler::c1nil) 4 0) (system::*make-special (lisp::quote compiler::*c1t*)) (lisp::or (lisp::boundp (lisp::quote compiler::*c1t*)) (lisp::setq compiler::*c1t* (lisp::list (lisp::quote compiler::location) (compiler::make-info :type (compiler::object-type lisp::t)) lisp::t))) (system::mfsfun (lisp::quote compiler::c1t) 5 0) (system::mf (lisp::quote compiler::flags-pos) 6) (system::mm (lisp::quote compiler::flag-p) 7) (system::mf (lisp::quote compiler::fix-opt) 8) (system::mf (lisp::quote compiler::result-type-from-args) 9) (system::mm (lisp::quote compiler::flags) 10) (system::mf (lisp::quote compiler::c1symbol-fun) 11) (system::mfsfun (lisp::quote compiler::replace-constant) 12 1) (system::mfsfun (lisp::quote compiler::c1lambda-fun) 13 2) (system::mf (lisp::quote compiler::c2expr) 14) (system::mfsfun (lisp::quote compiler::c2funcall-sfun) 15 3) (system::mfsfun (lisp::quote compiler::c2expr*) 16 1) (system::mfsfun (lisp::quote compiler::c2expr-top) 17 2) (system::mfsfun (lisp::quote compiler::c2expr-top*) 18 2) (system::mfsfun (lisp::quote compiler::c1progn) 19 1) (system::mfsfun (lisp::quote compiler::c1progn*) 20 2) (system::mf (lisp::quote compiler::c2progn) 21) (system::mfsfun (lisp::quote compiler::c1args) 22 2) (system::mfsfun (lisp::quote compiler::c1structure-ref) 23 1) (system::mfsfun (lisp::quote compiler::c1structure-ref1) 24 3) (system::mfsfun (lisp::quote compiler::coerce-loc-structure-ref) 25 2) (system::mfsfun (lisp::quote compiler::c2structure-ref) 26 4) (system::mfsfun (lisp::quote compiler::my-call) 27 4) (system::mfsfun (lisp::quote compiler::c1structure-set) 28 1) (lisp::let* ((#0=#:g1098 (lisp::quote compiler::side-effects)) (#1=#:g1099 (lisp::quote compiler::inline-always)) (#2=#:g1100 (lisp::cons (lisp::quote (lisp::nil lisp::t 3 "Ct")) (lisp::get #0# #1#)))) (system::put-aux #0# #1# #2#)) (system::mfsfun (lisp::quote compiler::c2structure-set) 29 5) (system::setvv 94 (lisp::* 1.0F0 lisp::most-positive-long-float)) (system::setvv 96 (lisp::* 1.0F0 lisp::least-positive-long-float)) (system::mfsfun (lisp::quote compiler::c1constant-value) 30 2) (system::mm (lisp::quote system::define-compiler-macro) 31) (system::mfsfun (lisp::quote system::undef-compiler-macro) 32 1) (system::*make-special (lisp::quote compiler::*compiler-temps*)) (lisp::or (lisp::boundp (lisp::quote compiler::*compiler-temps*)) (lisp::setq compiler::*compiler-temps* (lisp::quote (compiler::tmp0 compiler::tmp1 compiler::tmp2 compiler::tmp3 compiler::tmp4 compiler::tmp5 compiler::tmp6 compiler::tmp7 compiler::tmp8 compiler::tmp9)))) (system::putprop (lisp::quote system::define-inline-function) (lisp::quote 2) (lisp::quote system::pretty-print-format)) (system::mm (lisp::quote system::define-inline-function) 33) (system::mfsfun (lisp::quote compiler::name-to-sd) 34 1) (system::mfsfun (lisp::quote compiler::name-sd1) 35 1) (system::mfsfun (lisp::quote compiler::co1structure-predicate) 36 2))))
)
