       
#(#! 
(lisp::in-package (lisp::quote user::compiler))
#(compiler::*next-cvar* compiler::*next-cmacro* compiler::*next-vv* compiler::*next-cfun* compiler::*last-label* compiler::*objects* compiler::*constants* compiler::*local-funs* compiler::*global-funs* compiler::*global-entries* compiler::*undefined-vars* compiler::*reservations* compiler::*closures* compiler::*top-level-forms* compiler::*non-package-operation* compiler::*function-declarations* compiler::*inline-functions* compiler::*inline-blocks* compiler::*notinline* (lisp::incf compiler::*next-cfun*) compiler::*compiler-output-data* compiler::*fasd-data* system::|#,| system::string-to-object compiler::*sharp-commas* lisp::compiled-function lisp::function "Can't dump un named compiled funs" (lisp::incf compiler::*next-cvar*) (lisp::incf compiler::*next-cmacro*) (lisp::&optional lisp::&rest lisp::&key) lisp::* lisp::integer lisp::values "The function return type ~s is illegal." (lisp::*) compiler::proclaimed-arg-types compiler::proclaimed-return-type compiler::proclaimed-function compiler::done "The function procl ~s ~s is not valid." "The function name ~s is not a symbol." compiler::predicate compiler::boolean compiler::return-type "The return type of ~s was badly declared." compiler::*compiler-output1* compiler::*sup-used* (lisp::setq compiler::*base-used* lisp::t) compiler::*compiler-push-events* compiler::cmp-notinline "The variable name ~s is not a symbol." "The OPTIMIZE proclamation ~s is illegal." compiler::*compiler-check-args* compiler::*safe-compile* compiler::*space* compiler::*speed* "The OPTIMIZE quality ~s is unknown." "The type declaration ~s is illegal." "Bad function proclamation ~a" "Bad function proclamation ~a" "The function name ~s is not a symbol." "The function name ~s is not a symbol." "The variable name ~s is not a symbol." compiler::*alien-declarations* "The declaration specifier ~s is not a symbol." "The declaration specifier ~s is unknown." :proclaim compiler::cmp-type compiler::var "Inconsistent type declaration was found for the variable ~s." "The variable name ~s is not a symbol." lisp::declare "The declaration ~s is illegal." "The special declaration ~s contains a non-symbol ~s." "The ignore declaration ~s contains a non-symbol ~s." "The type declaration ~s is illegal." "The type declaration ~s contains a non-symbol ~s." "The object declaration ~s contains a non-symbol ~s." lisp::object "The register declaration ~s contains a non-symbol ~s." compiler::register :dynamic-extent "The type declaration ~s contains a non-symbol ~s." "The OPTIMIZE proclamation ~s is illegal." lisp::safety lisp::space "The OPTIMIZE quality ~s is unknown." "The function declaration ~s is illegal." "The function declaration ~s is illegal." lisp::inline "The function name ~s is not a symbol." lisp::notinline "The function name ~s is not a symbol." "The declaration specifier ~s is not a symbol." "The declaration specifier ~s is unknown." compiler::decl-body "Type declaration was found for not bound variable ~s." "Ignore declaration was found for not bound variable ~s." "The variable name ~s is not a symbol." "The OPTIMIZE proclamation ~s is illegal." "The OPTIMIZE quality ~s is unknown." "The variable name ~s is not a symbol." "The type declaration ~s is illegal." "The variable name ~s is not a symbol." "The function declaration ~s is illegal." "The function declaration ~s is illegal." "The function name ~s is not a symbol." "The function name ~s is not a symbol." "The variable name ~s is not a symbol." "The declaration specifier ~s is not a symbol." "The variable name ~s is not a symbol." "The declaration specifier ~s is unknown." compiler::push-data-incf lisp::make-string-output-stream compiler::wt-data1 lisp::get-output-stream-string system::contains-sharp-comma compiler::wt-to-string lisp::typep system::compiled-function-name compiler::cmperr compiler::type-filter lisp::warn compiler::function-arg-types compiler::function-return-type compiler::sch-local-fun compiler::type-and compiler::cmpwarn lisp::special system::*make-special lisp::optimize lisp::speed lisp::compilation-speed lisp::type compiler::proclaim-var lisp::fixnum lisp::character lisp::short-float lisp::long-float lisp::ftype compiler::add-function-proclamation lisp::ignore lisp::declaration lisp::array lisp::atom lisp::bignum lisp::bit lisp::bit-vector lisp::common lisp::complex lisp::cons lisp::double-float lisp::float lisp::hash-table lisp::keyword lisp::list lisp::null lisp::number lisp::package lisp::pathname lisp::random-state lisp::ratio lisp::rational lisp::readtable lisp::sequence lisp::simple-array lisp::simple-bit-vector lisp::simple-string lisp::simple-vector lisp::single-float lisp::standard-char lisp::stream lisp::string lisp::string-char lisp::symbol lisp::vector lisp::signed-byte lisp::unsigned-byte compiler::sch-global compiler::cmp-macroexpand :register compiler::c1progn compiler::add-function-declaration lisp::remove compiler::baboon compiler::c2expr (system::%init . #((system::warn-version 0) (system::*make-special (lisp::quote compiler::*safe-compile*)) (lisp::or (lisp::boundp (lisp::quote compiler::*safe-compile*)) (lisp::setq compiler::*safe-compile* lisp::nil)) (system::*make-special (lisp::quote compiler::*compiler-check-args*)) (lisp::or (lisp::boundp (lisp::quote compiler::*compiler-check-args*)) (lisp::setq compiler::*compiler-check-args* lisp::nil)) (system::*make-special (lisp::quote compiler::*compiler-push-events*)) (lisp::or (lisp::boundp (lisp::quote compiler::*compiler-push-events*)) (lisp::setq compiler::*compiler-push-events* lisp::nil)) (system::*make-special (lisp::quote compiler::*speed*)) (lisp::or (lisp::boundp (lisp::quote compiler::*speed*)) (lisp::setq compiler::*speed* 3)) (system::*make-special (lisp::quote compiler::*space*)) (lisp::or (lisp::boundp (lisp::quote compiler::*space*)) (lisp::setq compiler::*space* 0)) (system::mfsfun (lisp::quote compiler::init-env) 0 0) (system::*make-special (lisp::quote compiler::*next-cvar*)) (lisp::or (lisp::boundp (lisp::quote compiler::*next-cvar*)) (lisp::setq compiler::*next-cvar* 0)) (system::*make-special (lisp::quote compiler::*next-cmacro*)) (lisp::or (lisp::boundp (lisp::quote compiler::*next-cmacro*)) (lisp::setq compiler::*next-cmacro* 0)) (system::*make-special (lisp::quote compiler::*next-vv*)) (lisp::or (lisp::boundp (lisp::quote compiler::*next-vv*)) (lisp::setq compiler::*next-vv* -1)) (system::*make-special (lisp::quote compiler::*next-cfun*)) (lisp::or (lisp::boundp (lisp::quote compiler::*next-cfun*)) (lisp::setq compiler::*next-cfun* 0)) (system::mm (lisp::quote compiler::next-cfun) 1) (system::mfsfun (lisp::quote compiler::add-symbol) 2 1) (system::mf (lisp::quote compiler::wt-to-string) 3) (system::mfsfun (lisp::quote compiler::add-object) 4 1) (system::mfsfun (lisp::quote compiler::add-constant) 5 1) (system::mm (lisp::quote compiler::next-cvar) 6) (system::mm (lisp::quote compiler::next-cmacro) 7) (system::*make-special (lisp::quote compiler::*do-tail-recursion*)) (lisp::or (lisp::boundp (lisp::quote compiler::*do-tail-recursion*)) (lisp::setq compiler::*do-tail-recursion* lisp::t)) (system::*make-special (lisp::quote compiler::*tail-recursion-info*)) (lisp::or (lisp::boundp (lisp::quote compiler::*tail-recursion-info*)) (lisp::setq compiler::*tail-recursion-info* lisp::nil)) (system::*make-special (lisp::quote compiler::*function-declarations*)) (lisp::or (lisp::boundp (lisp::quote compiler::*function-declarations*)) (lisp::setq compiler::*function-declarations* lisp::nil)) (system::mfsfun (lisp::quote compiler::function-arg-types) 8 1) (system::mfsfun (lisp::quote compiler::function-return-type) 9 1) (system::mfsfun (lisp::quote compiler::add-function-proclamation) 10 3) (system::mfsfun (lisp::quote compiler::add-function-declaration) 11 3) (system::mfsfun (lisp::quote compiler::get-arg-types) 12 1) (system::mfsfun (lisp::quote compiler::get-return-type) 13 1) (system::mfsfun (lisp::quote compiler::get-local-arg-types) 14 1) (system::mfsfun (lisp::quote compiler::get-local-return-type) 15 1) (system::*make-special (lisp::quote compiler::*sup-used*)) (lisp::or (lisp::boundp (lisp::quote compiler::*sup-used*)) (lisp::setq compiler::*sup-used* lisp::nil)) (system::*make-special (lisp::quote compiler::*base-used*)) (lisp::or (lisp::boundp (lisp::quote compiler::*base-used*)) (lisp::setq compiler::*base-used* lisp::nil)) (system::mfsfun (lisp::quote compiler::reset-top) 16 0) (system::mm (lisp::quote compiler::base-used) 17) (system::*make-special (lisp::quote compiler::*alien-declarations*)) (lisp::or (lisp::boundp (lisp::quote compiler::*alien-declarations*)) (lisp::setq compiler::*alien-declarations* lisp::nil)) (system::*make-special (lisp::quote compiler::*notinline*)) (lisp::or (lisp::boundp (lisp::quote compiler::*notinline*)) (lisp::setq compiler::*notinline* lisp::nil)) (system::mfsfun (lisp::quote compiler::inline-possible) 18 1) (system::mfsfun (lisp::quote lisp::proclaim) 19 1) (system::mfsfun (lisp::quote compiler::proclaim-var) 20 2) (system::mf (lisp::quote compiler::c1body) 21) (system::mfsfun (lisp::quote compiler::c1decl-body) 22 2) (system::putprop (lisp::quote compiler::decl-body) (lisp::quote compiler::c2decl-body) (lisp::quote compiler::c2)) (system::mf (lisp::quote compiler::c2decl-body) 23) (system::mfsfun (lisp::quote compiler::check-vdecl) 24 3) (system::mfsfun (lisp::quote lisp::proclamation) 25 1))))
)
